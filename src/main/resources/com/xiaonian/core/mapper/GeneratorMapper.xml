<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaonian.core.mapper.GeneratorMapper" >
	<resultMap id="BaseResultMap" type="com.xiaonian.core.entity.Generator" >
	    <result column="table_name" property="tableName" jdbcType="INTEGER" />
	    <result column="engine" property="engine" jdbcType="INTEGER" />
	    <result column="table_comment" property="tableComment" jdbcType="VARCHAR" />
	    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
 	</resultMap>

	<select id="getAllByMap" parameterType="java.util.Map" resultType="map">
		select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables 
			where table_schema = (select database()) 
		<if test="tableName != null and tableName.trim() != ''">
			and table_name like concat('%', #{tableName,jdbcType=VARCHAR}, '%') 
		</if>
	</select>
	
	<select id="queryTotal" resultType="int">
		select count(*) from information_schema.tables where table_schema = (select database())
		<if test="tableName != null and tableName.trim() != ''">
			and table_name like concat('%', #{tableName,jdbcType=VARCHAR}, '%') 
		</if> 
	</select> 
	
	<select id="queryTable" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select table_name as tableName, engine, table_comment as tableComment, create_time as createTime from information_schema.tables 
			where table_schema = (select database()) and table_name = #{tableName,jdbcType=VARCHAR}
	</select> 
	
	<select id="queryColumns" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select column_name as columnName, data_type as dataType, column_comment as columnComment, column_key as columnKey, extra from information_schema.columns
 			where table_name = #{tableName,jdbcType=VARCHAR} and table_schema = (select database()) order by ordinal_position
	</select>
</mapper>