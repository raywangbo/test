<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaonian.core.mapper.StrategyMapper" >
  <resultMap id="BaseResultMap" type="com.xiaonian.core.entity.Strategy" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="permission" property="permission" jdbcType="TINYINT" />
    <result column="type" property="type" jdbcType="BIT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, remark, permission, type, status, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from strategy
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getStrategyByAccount" resultType="java.lang.String" parameterType="java.lang.String">
      SELECT
		s.name
	FROM
		admin a,
		role r,
		admin_role ar,
		strategy s,
		role_strategy rs
	WHERE
		a.account = #{account,jdbcType=VARCHAR}
		AND s.`status` = 0
		AND a.id = ar.admin_id
		AND r.id = ar.role_id
		AND s.id = rs.strategy_id
  </select>
  <select id="getPermissionByAccount" resultType="java.lang.String" parameterType="java.lang.String">
    SELECT
		concat(s.name,':',s.permission)
	FROM
		admin a,
		role r,
		admin_role ar,
		strategy s,
		role_strategy rs
	WHERE
		a.account = #{account,jdbcType=VARCHAR}
		AND s.`status` = 0
		AND a.id = ar.admin_id
		AND r.id = ar.role_id
		AND s.id = rs.strategy_id
  </select>

  <select id="getAllByMap" parameterType="java.util.Map"
          resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM
    strategy
    WHERE 1=1
    <if test="id != null" >
      AND id = #{id,jdbcType=INTEGER}
    </if>
    <if test="name != null and name.trim() != ''">
      and name like concat('%', #{name,jdbcType=VARCHAR}, '%')
    </if>
    <if test="remark != null" >
      AND remark = #{remark,jdbcType=VARCHAR}
    </if>
    <if test="permission != null" >
      AND permission = #{permission,jdbcType=TINYINT}
    </if>
    <if test="type != null" >
      AND type = #{type,jdbcType=BIT}
    </if>
    <if test="status != null" >
      AND status = #{status,jdbcType=TINYINT}
    </if>
    <if test="createTime != null" >
      AND create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateTime != null" >
      AND update_time = #{updateTime,jdbcType=TIMESTAMP}
    </if>
    ORDER BY id DESC
  </select>
  <select id="getByRoleId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    s.id, name, remark, permission, type, status, create_time, update_time
    from strategy s, role_strategy rs
    where s.`status` = 0 AND s.id = rs.strategy_id AND rs.role_id = #{roleId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from strategy
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByPrimaryKeys" parameterType="java.lang.Integer">
    DELETE FROM strategy
    WHERE id in
    <foreach item="item" index="index" collection="array" open="("
             separator="," close=")">
      #{item}
    </foreach>
  </delete>


  <insert id="insert" parameterType="com.xiaonian.core.entity.Strategy" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into strategy (id, name, remark, 
      permission, type, status, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{permission,jdbcType=TINYINT}, #{type,jdbcType=BIT}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaonian.core.entity.Strategy" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into strategy
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="permission != null" >
        permission,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="permission != null" >
        #{permission,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=BIT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaonian.core.entity.Strategy" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update strategy
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="permission != null" >
        permission = #{permission,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=BIT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaonian.core.entity.Strategy" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update strategy
    set name = #{name,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=TINYINT},
      type = #{type,jdbcType=BIT},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>